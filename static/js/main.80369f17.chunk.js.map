{"version":3,"sources":["routes/About.js","components/Movie.js","routes/Home.js","components/Navigation.js","routes/Detail.js","App.js","index.js"],"names":["About","props","console","log","className","Movie","title","year","summary","poster","genres","to","pathname","state","src","alt","map","genre","index","slice","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","Navigation","Detail","location","history","undefined","push","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"2UAgBeA,MAZf,SAAeC,GAEX,OADAC,QAAQC,IAAIF,GAER,sBAAKG,UAAU,mBAAf,UACI,kIAGA,6D,gDC8BGC,MAjCf,YAAuD,IAAvCC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,OAC1C,OACA,qBAAKN,UAAU,QAAf,SACI,eAAC,IAAD,CAAMO,GAAI,CACNC,SAAS,gBACTC,MAAM,CAACN,OAAMD,QAAOE,UAASC,SAAOC,WAFxC,UAII,qBAAKI,IAAKL,EAAQM,IAAKT,EAAOA,MAAOA,IACrC,sBAAKF,UAAU,aAAf,UACI,oBAAIA,UAAU,eAAd,SAA8BE,IAC9B,oBAAIF,UAAU,cAAd,SAA6BG,IAC7B,oBAAIH,UAAU,gBAAd,SACKM,EAAOM,KAAI,SAACC,EAAMC,GACf,OAAO,oBAAgBd,UAAU,eAA1B,SAA0Ca,GAAjCC,QAGxB,oBAAGd,UAAU,iBAAb,UAA+BI,EAAQW,MAAM,EAAE,KAA/C,kBCmCDC,G,kNArDbP,MAAQ,CAENQ,WAAU,EACVC,OAAO,I,EAGTC,U,sBAAY,8BAAAC,EAAA,sEAOFC,IAAMC,IAAI,4DAPR,gBAGCJ,EAHD,EAERK,KACEA,KAAOL,OAMX,EAAKM,SAAS,CAACN,SAAQD,WAAU,IATvB,2C,uDAaZ,WAEEQ,KAAKN,c,oBAGP,WAEE,MAA4BM,KAAKhB,MAA1BQ,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,OAElB,OACE,yBAASlB,UAAU,YAAnB,SACGiB,EACE,qBAAKjB,UAAU,SAAf,SACC,sBAAMA,UAAU,eAAhB,6BAGF,qBAAKA,UAAU,SAAf,SACCkB,EAAON,KAAI,SAACc,GACX,OAAQ,cAAC,EAAD,CAENC,GAAID,EAAMC,GACVxB,KAAMuB,EAAMvB,KACZD,MAAOwB,EAAMxB,MACbE,QAASsB,EAAMtB,QACfC,OAAQqB,EAAME,mBACdtB,OAAQoB,EAAMpB,QANToB,EAAMC,e,GAvCNE,IAAMC,Y,MCSVC,MAVf,WAEI,OACI,sBAAK/B,UAAU,MAAf,UACI,cAAC,IAAD,CAAMO,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,SAAT,uBCiBGyB,E,uKAnBX,WACI,MAA8BP,KAAK5B,MAA3BoC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aACIC,IAAnBF,EAASxB,OACRyB,EAAQE,KAAK,O,oBAIrB,WACI,IAAQH,EAAaR,KAAK5B,MAAlBoC,SACR,OAAGA,EAASxB,MACF,+BAAOwB,EAASxB,MAAMP,QAErB,S,GAbE2B,IAAMC,WCiBZO,E,4JAZb,WACE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAWxB,IACxC,cAAC,IAAD,CAAOsB,KAAK,SAASE,UAAW5C,IAChC,cAAC,IAAD,CAAO0C,KAAK,gBAAgBE,UAAWR,W,GAP7BH,IAAMC,WCNxBW,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.80369f17.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './About.css'\r\n\r\n//Route 컴포넌트가 그려줄 컴포넌트에는 항상 props값이 전달되고, 이 props에 마음대로 데이터를 담아 보낼 수 있다. \r\nfunction About(props){\r\n    console.log(props);\r\n    return (\r\n        <div className=\"about__container\">\r\n            <span>\r\n                \"Freedom is the freedom to say that two plus make four. If that is granted, all else follows.\"\r\n            </span>\r\n            <span>- George Orwell, 1984</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport \"./Movie.css\"\r\nimport {Link} from 'react-router-dom'\r\n\r\n//state 가 필요하지 않으므로 함수형으로 작성\r\n//넘어올 영화 데이터를 관리할 prop-types 사용\r\n//slice : string.slice(시작숫자, 끝숫자) 이 때 끝숫자는 포함X\r\nfunction Movie({title, year, summary, poster, genres}){\r\n    return (\r\n    <div className=\"movie\">\r\n        <Link to={{\r\n            pathname:'/movie-detail',\r\n            state:{year, title, summary, poster,genres},\r\n        }}>\r\n            <img src={poster} alt={title} title={title}/>\r\n            <div className=\"movie_data\">\r\n                <h3 className=\"movie__title\">{title}</h3>\r\n                <h5 className=\"movie__year\">{year}</h5>\r\n                <ul className=\"movie__genres\">\r\n                    {genres.map((genre,index)=>{\r\n                        return <li key={index} className=\"movie__genre\">{genre}</li>\r\n                    })}\r\n                </ul>\r\n                <p className=\"movie__summary\">{summary.slice(0,180)}...</p>\r\n            </div>\r\n            </Link>\r\n    </div>\r\n    );\r\n}\r\n\r\nMovie.propTypes={ \r\n    id: propTypes.number.isRequired,\r\n    year: propTypes.number.isRequired,\r\n    title: propTypes.string.isRequired,\r\n    summary: propTypes.string.isRequired,\r\n    poster: propTypes.string.isRequired,\r\n    //genres는 array이므로 arrayOf(string) 사용\r\n    genres: propTypes.arrayOf(propTypes.string).isRequired,\r\n};\r\n\r\nexport default Movie;","import axios from 'axios';\r\nimport React from 'react';\r\nimport Movie from '../components/Movie';\r\nimport './Home.css';\r\n\r\nclass Home extends React.Component{\r\n  state = {\r\n    //loading중일 때의 상태를 관리할 값\r\n    isLoading:true,\r\n    movies:[],\r\n  }\r\n\r\n  getMovies = async() => {//구조 분해 할당\r\n    const {\r\n      data:{\r\n        data:{ movies },\r\n      },\r\n    }\r\n    //network를 사용해서 가져와야 하므로 자바스크립트에게 시가닝 걸리는 작업이라고 알려줘야 한다. async: 함수의 ()앞에 붙이기(비동기라고 알려주기), await:시간이 필요한 대상 앞에 붙이기\r\n    = await axios.get('https://yts-proxy.now.sh/list_movies.json?sort_bu=rating');\r\n    //키와 변수의 이름이 같다면 축약가능. movies:movies\r\n    this.setState({movies, isLoading:false});\r\n  }\r\n\r\n  //app component가 그려지면 호출되는 함수\r\n  componentDidMount(){\r\n    //영화 데이터 로딩\r\n    this.getMovies();\r\n  }\r\n\r\n  render() {\r\n    //구조 분해 할당으로 미리 this.state를 넣어놓기\r\n    const {isLoading, movies} = this.state;\r\n    //html의 class와 jsx(javascript)의 class가 겹치므로 다르게 사용(className, htmlFor)\r\n    return (\r\n      <section className=\"container\">\r\n        {isLoading ? \r\n          (<div className=\"loader\">\r\n            <span className=\"loader__text\">'Loading...' </span>\r\n          </div>\r\n          ):(\r\n          <div className=\"movies\">\r\n          {movies.map((movie)=>{\r\n            return (<Movie\r\n              key={movie.id}\r\n              id={movie.id}\r\n              year={movie.year}\r\n              title={movie.title}\r\n              summary={movie.summary}\r\n              poster={movie.medium_cover_image}\r\n              genres={movie.genres}/>);\r\n          })}\r\n          </div>\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n\r\n","import React from \"react\";\r\nimport {Link} from 'react-router-dom';\r\nimport \"./Navigation.css\"\r\n\r\nfunction Navigation(){\r\n    //link to 를 통해 props에 데이터를 전달해 줄 수 있다.\r\n    return (\r\n        <div className=\"nav\">\r\n            <Link to=\"/\">Home</Link>\r\n            <Link to='/about'>About</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React from \"react\";\r\n\r\n//props의 history 에서 url 변경 함수를 사용할 수 있다. \r\n//직접 주소창에 detail을 입력해서 들어가서 location의 state값이 비어 있는 경우, history를 사용해서 url을 / (home)로 강제 수정한다. 즉, redirect이동.\r\n\r\n//render -> componentDidMount 순서대로 함수를 실행하므로 render에도 redirect 코드를 추가해야 한다. \r\nclass Detail extends React.Component{\r\n    componentDidMount(){\r\n        const { location, history } = this.props;\r\n        if(location.state === undefined){\r\n            history.push('/');\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { location } = this.props;\r\n        if(location.state){\r\n           return <span>{location.state.title}</span>;\r\n        }else{\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Detail;","import React from 'react';\nimport './App.css';\nimport { HashRouter, Route } from 'react-router-dom';\nimport About from './routes/About';\nimport Home from './routes/Home';\nimport Navigation from './components/Navigation';\nimport Detail from './routes/Detail';\n\n//router는 /, /home, /home/introduction순서로 path props가 있는지 찾기 때문에 /home/introduction으로 접속하면 /home, /home/introduction모두가 그려진다. => 이를 방지하기 위해 excat props를 추가한다.\n//Link, Router 컴포넌트는 반드시 HashRouter안에 포함되어야 한다. \nclass App extends React.Component{\n  render() {    \n    return (\n      <HashRouter>\n        <Navigation/>\n        <Route path=\"/\" exact={true} component={Home} />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/movie-detail\" component={Detail}/>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'; //App component를 import해서 사용\n\nReactDOM.render(<App />, document.getElementById('root')); //App.js파일에 작성한 코드를 index.html의 id가 root인 element에 넣어 준다.\n//react는 최종적으로 1개의 component를 그려야 한다. \n"],"sourceRoot":""}